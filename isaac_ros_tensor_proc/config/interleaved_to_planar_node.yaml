%YAML 1.2
# SPDX-FileCopyrightText: NVIDIA CORPORATION & AFFILIATES
# Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
---
name: global
components:
- name: adapter_video_buffer
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "VideoBuffer"
- name: adapter_bgr_u8
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "Tensor"
    image_type: "BGR_U8"
- name: adapter_rgb_u8
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "Tensor"
    image_type: "RGB_U8"
- name: adapter_bgr_f32
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "Tensor"
    image_type: "BGR_F32"
- name: adapter_rgb_f32
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "Tensor"
    image_type: "RGB_F32"
- name: adapter_planar_bgr_f32
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "Tensor"
    image_type: "PLANAR_BGR_F32"
- name: adapter_planar_rgb_f32
  type: nvidia::isaac::tensor_ops::ImageAdapter
  parameters:
    message_type: "Tensor"
    image_type: "PLANAR_RGB_F32"
---
name: interleaved_to_planar
components:
- name: data_receiver
  type: nvidia::gxf::DoubleBufferReceiver
  parameters:
    capacity: 12
- type: nvidia::gxf::MessageAvailableSchedulingTerm
  parameters:
    receiver: data_receiver
    min_size: 1
- name: data_transmitter
  type: nvidia::gxf::DoubleBufferTransmitter
  parameters:
    capacity: 12
- type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
  parameters:
    transmitter: data_transmitter
    min_size: 1
- name: allocator
  type: nvidia::gxf::BlockMemoryPool
  parameters:
    storage_type: 1
    block_size: 0
    num_blocks: 40
- name: cuda_stream
  type: nvidia::gxf::CudaStreamPool
  parameters:
    stream_flags: 1
    stream_priority: 0
    reserved_size: 1
    max_size: 1
    nvtx_identifier: "nitros_interleaved_to_planar_node_cuda_stream"
- name: interleaved_to_planar_operator
  type: nvidia::isaac::tensor_ops::InterleavedToPlanar
  parameters:
    receiver: data_receiver
    transmitter: data_transmitter
    pool: allocator
    input_adapter: global/adapter_rgb_f32  # nhwc
    output_adapter: global/adapter_planar_rgb_f32  # nchw
    output_name: "input_tensor"
    stream_pool: cuda_stream
---
name: cuda_stream_sync
components:
- name: rx
  type: nvidia::gxf::DoubleBufferReceiver
  parameters:
    capacity: 1
- name: tx
  type: nvidia::gxf::DoubleBufferTransmitter
  parameters:
    capacity: 1
- type: nvidia::gxf::MessageAvailableSchedulingTerm
  parameters:
    receiver: rx
    min_size: 1
- type: nvidia::gxf::DownstreamReceptiveSchedulingTerm
  parameters:
    transmitter: tx
    min_size: 1
- type: nvidia::gxf::CudaStreamSync
  parameters:
    rx: rx
    tx: tx
---
name: sink
components:
- name: signal
  type: nvidia::gxf::DoubleBufferReceiver
  parameters:
    capacity: 1
- type: nvidia::gxf::MessageAvailableSchedulingTerm
  parameters:
    receiver: signal
    min_size: 1
- name: sink
  type: nvidia::isaac_ros::MessageRelay
  parameters:
    source: signal
---
components:
- type: nvidia::gxf::Connection
  parameters:
    source: interleaved_to_planar/data_transmitter
    target: cuda_stream_sync/rx
- type: nvidia::gxf::Connection
  parameters:
    source: cuda_stream_sync/tx
    target: sink/signal
---
name: utils
components:
- name: clock
  type: nvidia::gxf::RealtimeClock
- type: nvidia::gxf::EventBasedScheduler
  parameters:
    clock: clock
    stop_on_deadlock: false
    worker_thread_number: 2
    worker_thread_name_id: "interleaved_to_planar_node"
- type: nvidia::gxf::JobStatistics
  parameters:
    clock: clock
